openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Madam Admin Client Requests API
  description: Madam 앱 관리자용 클라이언트에 필요한 API 스펙 1차 정의.
  contact:
    name: Julius
    email: johncrist2000@gmail.com
  license:
    name: UNLICENSED
tags:
  - name: Admin Auth
    description: 관리자 인증
  - name: Dashboard
    description: 통계&차트
  - name: System Variable
    description: 시스템 환경 변수값 관리
  - name: Charm Plan
    description: 매력 포인트 플랜 관리
  - name: Help Desk
    description: 헬프 데스크 관리
  - name: Q&A
    description: 문의글&답변 관리
  - name: Profile Extra Item
    description: 프로필 추가 항목 관리
  - name: User Block
    description: 신고/차단 건 관리
  - name: User Interest
    description: 관심사/싫어요 항목 관리
  - name: User Photo
    description: 유저 사진 관리
  - name: User Profile
    description: 유저 프로필 관리
  - name: Notify Violation
    description: 유저 경고 처리
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Admin:
      type: object
      description: 관리자 클라이언트 데이터
      properties:
        email:
          type: string
          format: email
          description: 사용자 이메일
          example: madam@example.com
        uid:
          type: string
          description: 암호화 된 Google Firebase Auth Credential ID
          example: uid
        name:
          type: string
          description: Google Firebase 인증에서 가져온 표시되는 사용자 명칭
          example: Madam
    SystemVariable:
      type: object
      description: 시스템 환경변수 클라이언트 데이터
      properties:
        type:
          type: string
          description: '구분값 (예: DB / POINT_CALC / ...)'
          example: POINT_CALC
        key:
          type: string
          description: 환경변수 명칭(내부 키)
          example: CALC_1
        value:
          type: string
          description: 값
          example: '10'
        use:
          type: boolean
          description: 사용여부
          example: true
        adminName:
          type: string
          format: email
          description: 최종 수정 관리자 명
          example: Julius
        createdAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2021-08-09T21:59:00.000Z'
        modifiedAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2021-08-09T21:59:00.000Z'
    CharmPlan:
      type: object
      description: 포인트 플랜 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 고유 키
          example: 1
        name:
          type: string
          description: 플랜 명칭
          example: Charm 10
        description:
          type: string
          description: 플랜 설명
          example: 매력 포인트 +10
        dollar:
          type: string
          description: 플랜 가격(USD)
          example: '10.00'
        charm:
          type: integer
          format: int32
          description: 포인트
          example: 10
        order:
          type: integer
          format: int32
          description: 표출 순서
          example: 1
        purchasedCount:
          type: integer
          format: int32
          description: 구매 횟수
          example: 100000
        createdAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2021-08-09T21:59:00.000Z'
        modifiedAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
          example: Julius
    Guide:
      type: object
      description: 헬프데스크 클라이언트 데이터
      properties:
        key:
          type: string
          description: 고유 키
          enum:
            - APP_BASE_KR
            - APP_BASE_EN
            - ACCOUNT_KR
            - ACCOUNT_EN
            - COUPLING_KR
            - COUPLING_EN
            - MEETING_KR
            - MEETING_EN
            - BEST_MADAM_KR
            - BEST_MADAM_EN
            - TEAM_KR
            - TEAM_EN
          example: APP_BASE_KR
        icon:
          type: string
          description: 아이콘 경로/명
          example: xi-close
        content:
          type: string
          description: 글 내용
          example: |
            # 헬프데스크
              1. 이것은 헬프데스크입니다
        display:
          type: boolean
          description: 글 표시여부
          example: true
        modifiedAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
    Inquiry:
      type: object
      description: 문의글 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 문의글 고유 키
          example: 1
        email:
          type: string
          description: 문의글 작성자 이메일
          example: question@gmail.com
        type:
          type: string
          description: 문의 유형
          enum:
            - INQUIRY
            - REQUEST
            - ETC
          example: INQUIRY
        title:
          type: string
          description: 문의글 제목
          example: 문의글
        answered:
          type: boolean
          description: 답변 여부
          example: true
        adminName:
          type: string
          description: 답변 관리자 명
          example: Julius
        createdAt:
          type: string
          format: date-time
          description: 문의글 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        answeredAt:
          type: string
          format: date-time
          description: 답변 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
    InquiryDetail:
      type: object
      description: 문의글 상세 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 문의글 고유 키
          example: 1
        email:
          type: string
          description: 문의글 작성자 이메일
          example: question@gmail.com
        type:
          type: string
          description: 문의 유형
          enum:
            - INQUIRY
            - REQUEST
            - ETC
          example: INQUIRY
        title:
          type: string
          description: 문의글 제목
          example: 문의글
        content:
          type: string
          description: 문의글 내용
          example: |
            # Madam앱이 좋은이유
              - 최고니깐
        answered:
          type: boolean
          description: 답변 여부
          example: true
        adminName:
          type: string
          description: 답변 관리자 명
          example: Julius
        answer:
          type: string
          example: |
            # 감사합니다!
        createdAt:
          type: string
          format: date-time
          description: 문의글 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        answeredAt:
          type: string
          format: date-time
          description: 답변 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
    ProfileExtraItem:
      type: object
      description: 유저 프로필 추가 항목 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 프로필 추가 항목 고유 키
          example: 1
        titleKr:
          type: string
          description: 프로필 추가 항목 한글 명칭
          example: MBTI
        titleEn:
          type: string
          description: 프로필 추가 항목 영문 명칭
          example: MBTI
        type:
          type: string
          description: 타입
          enum:
            - TEXT
            - NUMBER
            - TEXT_AREA
            - SELECT
            - MULTI_SELECT
            - RADIO
          example: SELECT
        inputLength:
          type: integer
          format: int32
          description: 타입이 TEXT / TEXT_AREA일 시, 최대 입력 가능 글자수. MULT_SELECT일 시, 최대 선택 가능 항목 수
          example: null
        modifiedAt:
          type: string
          format: date-time
          description: 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
          example: Julius
    ProfileSelectItem:
      type: object
      description: SELECT 타입인 유저 프로필 추가 항목용 선택요소 클라이언트 데이터
      properties:
        profileExtraItemId:
          type: integer
          format: int64
          description: 프로필 추가 항목 고유 키
          example: 1
        key:
          type: string
          description: 선택요소 고유 키
          example: ISTJ
        value:
          type: string
          description: 선택요소 값
          example: ISTJ
        use:
          type: boolean
          description: 사용여부
          example: true
        modifiedAt:
          type: string
          format: date-time
          description: 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
          example: Julius
    UserBlock:
      type: object
      description: 차단/신고 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 차단/신고 고유 키
          example: 1
        requestUserEmail:
          type: string
          description: 차단/신고 요청자 이메일
          example: 신고자
        targetUserEmail:
          type: string
          description: 차단/신고 대상자 이메일
          example: 유저
        type:
          type: string
          enum:
            - PHOTO
            - PROFILE
            - CHAT
            - ETC
          description: 차단/신고 사유 유형
          example: PHOTO
        blockReason:
          type: string
          description: 차단/신고 사유
          example: 사진이 이상함
        approved:
          type: string
          enum:
            - NONE
            - APPROVE
            - DISMISS
          description: 차단/신고 승인 상태
          example: APPROVE
        createdAt:
          type: string
          format: date-time
          description: 차단/신고 일시
          example: '2021-08-09T21:59:00.000Z'
        approvedAt:
          type: string
          format: date-time
          description: 차단/신고 일시
          example: '2021-08-09T21:59:00.000Z'
        adminEmail:
          type: string
          description: 승인 관리자 닉네임
          example: Julius
    ProfileInterestItem:
      type: object
      description: 관심사/싫어요 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 관심사/싫어요 고유 키
          example: 1
        itemKr:
          type: string
          description: 관심사/싫어요 항목 한글
          example: 사랑
        itemEn:
          type: string
          description: 관심사/싫어요 항목 영문
          example: Love
        isLike:
          type: boolean
          description: 관심사/싫어요 구분(true == 관심사)
          example: true
        modifiedAt:
          type: string
          format: date-time
          description: 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
          example: Julius
    ProfileInterestItemRequest:
      type: object
      description: 관심사/싫어요 사용자 요청 클라이언트 데이터
      properties:
        id:
          type: integer
          format: int64
          description: 관심사/싫어요 요청 고유 키
          example: 1
        item:
          type: string
          description: 요청 관심사/싫어요 항목
          example: Hate
        isLike:
          type: boolean
          description: 관심사/싫어요 구분(true == 관심사)
          example: false
        requestCount:
          type: integer
          format: int32
          description: 요청 수
          example: 1
    ProfilePhoto:
      type: object
      description: 사용자 사진 클라이언트 데이터
      properties:
        profileUid:
          type: string
          description: 프로필 고유 키
          example: UID
        nickname:
          type: string
          description: 프로필 닉네임
          example: Madam
        order:
          type: integer
          format: int32
          description: 표출 순서
          example: 1
        src:
          type: string
          description: 사진 경로
          example: 'https://madam-photo/photo.png'
        validated:
          type: boolean
          description: 승인 여부
          example: true
        type:
          type: string
          enum:
            - DEFAULT
            - THUMBNAIL
            - MAIN
          description: 사진 타입
          example: DEFAULT
        createdAt:
          type: string
          format: date-time
          description: 등록 일시
          example: '2021-08-09T21:59:00.000Z'
        modifiedAt:
          type: string
          format: date-time
          description: 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
        adminName:
          type: string
          description: 최종 수정 관리자 명
          example: Julius
    Profile:
      type: object
      description: 사용자 프로필 클라이언트 데이터
      properties:
        uid:
          type: string
          description: 프로필 고유 키
          example: UID
        userStatus:
          type: string
          enum:
            - REST
            - ACTIVE
            - BAN
            - QUIT
            - INACTIVE
          example: ACTIVE
        nickname:
          type: string
          description: 프로필 닉네임
          example: Madam
        profileExtraItemId:
          type: integer
          format: int64
          description: 유저 프로필 추가 선택항목 고유 키
          example: 1
        profileExtraItemTitle:
          type: string
          description: 유저 프로필 추가 선택항목 한글 명칭
          example: 자기소개
        profileExtraItemValue:
          type: string
          description: 유저 프로필 추가 선택항목 입력 값
          example: |
            나는 천재입니다.
        modifiedAt:
          type: string
          format: date-time
          description: 최종 수정일시
          example: '2021-08-09T21:59:00.000Z'
paths:
  /login:
    post:
      tags:
        - Admin Auth
      summary: 관리자 로그인
      description: 관리자 인증 성공 시 토큰 발급
      requestBody:
        description: Google Firebase Auth UID
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: UID
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                description: 토큰
                example: token
        204:
          description: No Content
        400:
          description: Invalid Request Params
        403:
          description: No Authority
        500:
          description: Server Error
  /logout:
    get:
      security:
        - bearerAuth: []
      tags:
        - Admin Auth
      summary: 관리자 로그아웃
      description: 토큰 만료처리
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Params
        403:
          description: No Authority
        500:
          description: Server Error
  /:uid:
    get:
      security:
        - bearerAuth: []
      tags:
        - Admin Auth
      summary: 관리자 정보 조회
      description: 관리자 정보 조회
      parameters:
        - in: path
          name: uid
          description: Google Firebase Auth UID
          required: true
          schema:
            type: string
            example: UID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        204:
          description: No Content
        400:
          description: Invalid Request Params
        403:
          description: No Authority
        500:
          description: Server Error
    put:
      security:
        - bearerAuth: []
      tags:
        - Admin Auth
      summary: 관리자 명 변경
      description: 관리자 표시 명칭 변경
      requestBody:
        description: 관리자 명
        required: true
        content:
          application/json:
            schema:
              required:
                - uid
                - name
              properties:
                uid:
                  type: string
                  description: Google Firebase Auth UID
                  example: UID
                name:
                  type: string
                  description: 변경할 관리자 명
                  example: Madam
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Params
        403:
          description: No Authority
        500:
          description: Server Error
  /system-variables:
    get:
      security:
        - bearerAuth: []
      tags:
        - System Variable
      summary: 시스템 환경 변수 목록 조회
      description: 시스템 환경 변수 목록 조회
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: key
          description: 변수 명칭 (LIKE 검색)
          required: false
          schema:
            type: string
            example: CALC_1
        - in: query
          name: type
          description: 변수 구분값
          required: false
          schema:
            type: string
            example: POINT_CALC
        - in: query
          name: use
          description: 사용여부
          required: false
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemVariable'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /system-variables/:type/:key:
    post:
      security:
        - bearerAuth: []
      tags:
        - System Variable
      summary: 시스템 환경변수 생성
      description: 시스템 환경변수 신규 생성
      parameters:
        - in: path
          name: type
          description: 변수 구분값
          required: true
          schema:
            type: string
            example: POINT_CALC
        - in: path
          name: key
          description: 변수 명
          required: true
          schema:
            type: string
            example: CALC_1
      requestBody:
        description: 시스템 환경변수 데이터 값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
                - adminEmail
              properties:
                value:
                  type: string
                  description: 환경변수 값
                  example: '10'
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemVariable'
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    put:
      security:
        - bearerAuth: []
      tags:
        - System Variable
      summary: 시스템 환경변수 수정
      description: 시스템 환경변수 수정
      parameters:
        - in: path
          name: type
          description: 변수 구반값
          required: true
          schema:
            type: string
            example: POINT_CALC
        - in: path
          name: key
          description: 변수 명
          required: true
          schema:
            type: string
            example: CALC_1
      requestBody:
        description: 시스템 환경변수 데이터 값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
                - use
                - adminEmail
              properties:
                value:
                  type: string
                  description: 환경변수 값
                  example: '10'
                use:
                  type: boolean
                  description: 사용여부
                  example: true
                adminEmail:
                  type: string
                  format: email
                  description: 수정 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemVariable'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - System Variable
      summary: 시스템 환경변수 삭제
      description: 시스템 환경변수 삭제
      parameters:
        - in: path
          name: type
          description: 변수 구반값
          required: true
          schema:
            type: string
            example: POINT_CALC
        - in: path
          name: key
          description: 변수 명
          required: true
          schema:
            type: string
            example: CALC_1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /charm-plans:
    get:
      security:
        - bearerAuth: []
      tags:
        - Charm Plan
      summary: 포인트 플랜 목록 조회
      description: 포인트 플랜 목록 조회
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharmPlan'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    post:
      security:
        - bearerAuth: []
      tags:
        - Charm Plan
      summary: 포인트 플랜 생성
      description: 포인트 플랜 신규 생성
      requestBody:
        description: 포인트 플랜 데이터 값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - dollar
                - charm
                - adminEmail
              properties:
                name:
                  type: string
                  description: 플랜 명칭
                  example: Charm 10
                description:
                  type: string
                  description: 플랜 설명
                  example: 매력 포인트 +10
                dollar:
                  type: string
                  description: 플랜 가격(USD)
                  example: '10.00'
                charm:
                  type: integer
                  format: int32
                  description: 포인트
                  example: 10
                order:
                  type: integer
                  format: int32
                  description: 표출 순서
                  example: 1
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharmPlan'
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /charm-plans/:id:
    put:
      security:
        - bearerAuth: []
      tags:
        - Charm Plan
      summary: 포인트 플랜 수정
      description: 포인트 플랜 수정
      parameters:
        - in: path
          name: id
          description: 포인트 플랜 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 포인트 플랜 데이터 값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - dollar
                - charm
                - adminEmail
              properties:
                name:
                  type: string
                  description: 플랜 명칭
                  example: Charm 10
                description:
                  type: string
                  description: 플랜 설명
                  example: 매력 포인트 +10
                dollar:
                  type: string
                  description: 플랜 가격(USD)
                  example: '10.00'
                charm:
                  type: integer
                  format: int32
                  description: 포인트
                  example: 10
                order:
                  type: integer
                  format: int32
                  description: 표출 순서
                  example: 1
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharmPlan'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - Charm Plan
      summary: 포인트 플랜 삭제
      description: 포인트 플랜 삭제
      parameters:
        - in: path
          name: id
          description: 포인트 플랜 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /help-desks:
    post:
      security:
        - bearerAuth: []
      tags:
        - Help Desk
      summary: 헬프데스크 생성/수정
      description: 헬프데스크 신규 생성 또는 수정
      requestBody:
        description: 헬프데스크 데이터 값
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - content
                - display
                - adminEmail
              properties:
                key:
                  type: string
                  enum:
                    - APP_BASE_KR
                    - APP_BASE_EN
                    - ACCOUNT_KR
                    - ACCOUNT_EN
                    - COUPLING_KR
                    - COUPLING_EN
                    - MEETING_KR
                    - MEETING_EN
                    - BEST_MADAM_KR
                    - BEST_MADAM_EN
                    - TEAM_KR
                    - TEAM_EN
                  description: 고유 키
                  example: APP_BASE_KR
                icon:
                  type: string
                  description: 아이콘 경로/명
                  example: xi-close
                content:
                  type: string
                  description: 글 내용
                  example: |
                    # 헬프데스크
                      1. 이것은 헬프데스크입니다
                display:
                  type: boolean
                  description: 글 표시여부
                  example: true
                adminEmail:
                  type: string
                  format: email
                  description: 생성/수정 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /help-desks/:key:
    get:
      security:
        - bearerAuth: []
      tags:
        - Help Desk
      summary: 헬프데스크 조회
      description: 헬프데스크 글 조회
      parameters:
        - in: path
          name: key
          description: 헬프데스크 구분(고유) 키
          required: true
          schema:
            type: string
            enum:
              - APP_BASE_KR
              - APP_BASE_EN
              - ACCOUNT_KR
              - ACCOUNT_EN
              - COUPLING_KR
              - COUPLING_EN
              - MEETING_KR
              - MEETING_EN
              - BEST_MADAM_KR
              - BEST_MADAM_EN
              - TEAM_KR
              - TEAM_EN
            example: APP_BASE_KR
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guide'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /qnas:
    get:
      security:
        - bearerAuth: []
      tags:
        - Q&A
      summary: 문의글 목록 조회
      description: 문의글 목록 조회 (삭제된 항목 제외)
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: title
          description: 글 제목 (LIKE 검색)
          required: false
          schema:
            type: string
            example: 문의글
        - in: query
          name: type
          description: 글 유형
          required: false
          schema:
            type: string
            enum:
              - INQUIRY
              - REQUEST
              - ETC
            example: INQUIRY
        - in: query
          name: email
          description: 작성자 이메일 (LIKE 검색)
          required: false
          schema:
            type: string
            example: question@gmail.com
        - in: query
          name: answered
          description: 답변여부
          required: false
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inquiry'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /qnas/:id:
    get:
      security:
        - bearerAuth: []
      tags:
        - Q&A
      summary: 문의글 상세보기
      description: 문의글 상세보기
      parameters:
        - in: path
          name: id
          description: 문의글 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDetail'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    post:
      security:
        - bearerAuth: []
      tags:
        - Q&A
      summary: 문의글 답변 신규
      description: |
        - 문의글에 대한 답변 신규 생성
        - 이메일 발신 필요
      parameters:
        - in: path
          name: id
          description: 문의글 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 문의글 답변 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - content
                - adminEmail
              properties:
                id:
                  type: integer
                  format: int64
                  description: 문의글 고유 키
                  example: 1
                content:
                  type: string
                  description: 답변 내용
                  example: |
                    # 감사합니다!
                adminEmail:
                  type: string
                  format: email
                  description: 답변 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDetail'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    put:
      security:
        - bearerAuth: []
      tags:
        - Q&A
      summary: 문의글 답변 수정
      description: |
        - 기존에 답변을 단 문의글의 답변 수정
        - 이메일 재발신 필요
      parameters:
        - in: path
          name: id
          description: 문의글 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 문의글 답변 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - content
                - adminEmail
              properties:
                id:
                  type: integer
                  format: int64
                  description: 문의글 고유 키
                  example: 1
                content:
                  type: string
                  description: 답변 내용
                  example: |
                    # 감사합니다!
                adminEmail:
                  type: string
                  format: email
                  description: 답변 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDetail'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - Q&A
      summary: 문의글 삭제
      description: 문의글 삭제
      parameters:
        - in: path
          name: id
          description: 문의글 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /profile-extras:
    get:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 유저 프로필 추가 관리 항목 목록
      description: 유저 프로필 추가 관리 항목 목록
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: title
          description: 한글 또는 영문 명칭 (LIKE 검색)
          required: false
          schema:
            type: string
            example: MBTI
        - in: query
          name: type
          description: 추가항목 타입
          required: false
          schema:
            type: string
            enum:
              - TEXT
              - NUMBER
              - TEXT_AREA
              - SELECT
              - MULTI_SELECT
              - RADIO
            example: SELECT
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileExtraItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    post:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 유저 프로필 추가 관리 항목 신규 생성
      description: 유저 프로필 추가 관리 항목 신규 생성
      requestBody:
        description: 유저 프로필 추가 관리 항목 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - titleKr
                - titleEn
                - type
                - adminEmail
              properties:
                titleKr:
                  type: string
                  description: 프로필 추가 항목 한글 명칭
                  example: MBTI
                titleEn:
                  type: string
                  description: 프로필 추가 항목 영문 명칭
                  example: MBTI
                type:
                  type: string
                  enum:
                    - TEXT
                    - NUMBER
                    - TEXT_AREA
                    - SELECT
                    - MULTI_SELECT
                    - RADIO
                  description: 타입
                  example: SELECT
                inputLength:
                  type: integer
                  format: int32
                  description: 타입이 TEXT / TEXT_AREA일 시, 최대 입력 가능 글자수. MULT_SELECT일 시, 최대 선택 가능 항목 수
                  example: null
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileExtraItem'
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /profile-extras/:id:
    put:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 유저 프로필 추가 관리 항목 수정
      description: |
        - 유저 프로필 추가 관리 항목 수정 
          <br />(SELECT 타입인 프로필 추가 항목을 위한 선택 요소에 영향)
      parameters:
        - in: path
          name: id
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 유저 프로필 추가 관리 항목 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - titleKr
                - titleEn
                - type
                - adminEmail
              properties:
                titleKr:
                  type: string
                  description: 프로필 추가 항목 한글 명칭
                  example: MBTI
                titleEn:
                  type: string
                  description: 프로필 추가 항목 영문 명칭
                  example: MBTI
                type:
                  type: string
                  enum:
                    - TEXT
                    - NUMBER
                    - TEXT_AREA
                    - SELECT
                    - MULTI_SELECT
                    - RADIO
                  description: 타입
                  example: SELECT
                inputLength:
                  type: integer
                  format: int32
                  description: 타입이 TEXT / TEXT_AREA일 시, 최대 입력 가능 글자수. MULT_SELECT일 시, 최대 선택 가능 항목 수
                  example: null
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileExtraItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 유저 프로필 추가 관리 항목 삭제
      description: |
        - 유저 프로필 추가 관리 항목 삭제 
          <br />(SELECT 타입인 프로필 추가 항목을 위한 선택 요소도 함께 삭제)
      parameters:
        - in: path
          name: id
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /profile-extras/:profileExtraItemId:
    get:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 선택 요소 목록 조회
      description: SELECT 타입의 유저 프로필 추가 관리 항목에 대한 선택 요소 목록 조회
      parameters:
        - in: path
          name: profileExtraItemId
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: key
          description: 선택요소 고유 키 (LIKE 검색)
          required: false
          schema:
            type: string
            example: ISTJ
        - in: query
          name: value
          description: 선택요소 값 (LIKE 검색)
          required: false
          schema:
            type: string
            example: ISTJ
        - in: query
          name: use
          description: 사용여부
          required: false
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileSelectItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    post:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 선택 요소 신규 생성
      description: SELECT 타입의 유저 프로필 추가 관리 항목에 대한 선택 요소 신규 생성
      parameters:
        - in: path
          name: profileExtraItemId
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 선택 요소 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - value
                - use
                - adminEmail
              properties:
                key:
                  type: string
                  description: 선택 요소 고유 키
                  example: ISTJ
                value:
                  type: string
                  description: 선택 요소 값
                  example: ISTJ
                use:
                  type: boolean
                  description: 사용여부
                  example: true
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSelectItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /profile-extras/:profileExtraItemId/:key:
    put:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 선택 요소 수정
      description: SELECT 타입의 유저 프로필 추가 관리 항목에 대한 선택 요소 수정
      parameters:
        - in: path
          name: profileExtraItemId
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - in: path
          name: key
          description: 선택요소 고유 키
          required: true
          schema:
            type: string
            example: ISTJ
      requestBody:
        description: 선택 요소 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
                - use
                - adminEmail
              properties:
                value:
                  type: string
                  description: 선택 요소 값
                  example: ISTJ
                use:
                  type: boolean
                  description: 사용여부
                  example: true
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSelectItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - Profile Extra Item
      summary: 선택 요소 삭제
      description: SELECT 타입의 유저 프로필 추가 관리 항목에 대한 선택 요소 삭제
      parameters:
        - in: path
          name: profileExtraItemId
          description: 유저 프로필 추가 관리 항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - in: path
          name: key
          description: 선택요소 고유 키
          required: true
          schema:
            type: string
            example: ISTJ
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-blocks:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Block
      summary: 신고/차단 목록 조회
      description: 신고/차단 목록 조회
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: type
          description: 차단/신고 사유 유형
          required: false
          schema:
            type: string
            enum:
              - PHOTO
              - PROFILE
              - CHAT
              - ETC
            example: PHOTO
        - in: query
          name: requestUserEmail
          description: 차단/신고 요청자 이메일
          required: false
          schema:
            type: string
            example: 신고자
        - in: query
          name: targetUserEmail
          description: 차단/신고 대상자 이메일
          required: false
          schema:
            type: string
            example: 유저
        - in: query
          name: approved
          description: 차단/신고 승인 상태
          required: false
          schema:
            type: string
            enum:
              - NONE
              - APPROVE
              - DISMISS
            example: APPROVE
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserBlock'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-blocks/:id:
    put:
      security:
        - bearerAuth: []
      tags:
        - User Block
      summary: 차단/신고 건 처리
      description: |
        # 차단/신고 건 처리
          1. 승인/기각. 승인 시, 해당 대상자에게 경고 이메일 발송. 
          1. 해당 대상자가 이미 기존 2건의 승인된 차단/신고 건이 있을 시, 해당 대상자 유저 데이터의 개정 상태를 BAN으로 변경 후, 활동정지에 대한 이메일 발송 추가 필요
      parameters:
        - in: path
          name: id
          description: 차단/신고 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 차단/신고 승인 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - approved
                - approverEmail
              properties:
                approved:
                  type: string
                  enum:
                    - NONE
                    - APPROVE
                    - DISMISS
                  description: 차단/신고 승인 상태
                  example: APPROVE
                approverEmail:
                  type: string
                  format: email
                  description: 차단/신고 승인 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - User Block
      summary: 차단/신고 건 삭제
      description: 차단/신고 건 삭제
      parameters:
        - in: path
          name: id
          description: 차단/신고 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /notify-violation/:targetUserUid:
    put:
      security:
        - bearerAuth: []
      tags:
        - Notify Violation
      summary: 유저 차단/신고 처리
      description: |
        # 관리자가 직접 유저를 차단/신고 처리하는 기능. 
          1. 해당 차단/신고 데이터는 자동으로 승인 상태로 생성. 
          1. 처리후에 해당 대상자에게 경고 이메일 발송. 
          1. 해당 대상자가 이미 기존 2건의 승인된 차단/신고 건이 있을 시, 해당 대상자 유저 데이터의 개정 상태를 BAN으로 변경 후, 활동정지에 대한 이메일 발송 추가 필요
      parameters:
        - in: path
          name: targetUserUid
          description: 차단/신고 대상자 유저 고유 키
          required: true
          schema:
            type: string
            example: UID
      requestBody:
        description: 차단/신고 승인 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - blockReason
                - adminEmail
              properties:
                type:
                  type: string
                  enum:
                    - PHOTO
                    - PROFILE
                    - ETC
                  description: 차단/신고 사유 유형
                  example: ETC
                blockReason:
                  type: string
                  description: 차단/신고 사유
                  example: |
                    # 욕설이 섞인 관심사 추가 요청
                      - 쾌적한 앱 사용을 저해하는 활동으로 간주되어 부득이하게 경고를 드립니다.
                adminEmail:
                  type: string
                  format: email
                  description: 차단/신고(및 승인) 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-interests:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 항목 목록 조회
      description: 관심사/싫어요 항목 목록 조회
      parameters:
        - in: query
          name: isLike
          description: 관심사/싫어요 구분(true == 관심사)
          required: true
          schema:
            type: boolean
            example: true
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: item
          description: 관심사/싫어요 항목 (한글, 영문 모두 LIKE 검색)
          required: false
          schema:
            type: string
            example: Love
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileInterestItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    post:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 신규 생성
      description: 관심사/싫어요 신규 생성
      requestBody:
        description: 관심사/싫어요 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - itemKr
                - itemEn
                - isLike
                - adminEmail
              properties:
                itemKr:
                  type: string
                  description: 관심사/싫어요 항목 한글
                  example: 사랑
                itemEn:
                  type: string
                  description: 관심사/싫어요 항목 영문
                  example: Love
                isLike:
                  type: boolean
                  description: 관심사/싫어요 구분(true == 관심사)
                  example: true
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileInterestItem'
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-interests/:id:
    put:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 수정
      description: 관심사/싫어요 수정
      parameters:
        - in: path
          name: id
          description: 관심사/싫어요 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 관심사/싫어요 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - itemKr
                - itemEn
                - adminEmail
              properties:
                itemKr:
                  type: string
                  description: 관심사/싫어요 항목 한글
                  example: 사랑
                itemEn:
                  type: string
                  description: 관심사/싫어요 항목 영문
                  example: Love
                adminEmail:
                  type: string
                  format: email
                  description: 생성 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileInterestItem'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 삭제
      description: 관심사/싫어요 삭제
      parameters:
        - in: path
          name: id
          description: 관심사/싫어요 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-interest-requests:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 사용자 요청 목록 조회
      description: 관심사/싫어요 요청 목록 조회
      parameters:
        - in: query
          name: isLike
          description: 관심사/싫어요 구분(true == 관심사)
          required: true
          schema:
            type: boolean
            example: true
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileInterestItemRequest'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-interest-requests/:id:
    post:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 사용자 요청 반영 처리
      description: |
        # 관심사/싫어요 사용자 요청 반영 처리
          1. 사용자 요청 데이터 내 `requestProfileUids`(프로필 고유 키 목록["," 구분])로 가져온 프로필 내 관심사/싫어요 컬럼 값 목록에, 해당 API의 request로 받는 관심사/싫어요 항목 고유 키 적용
            <br />만일 해당 사용자 프로필 엔티티의 관심사/싫어요 값 목록에 같은 항목(id)이 존재한다면, 추가 불필요
          1. 사용자 요청 데이터 삭제
      parameters:
        - in: path
          name: id
          description: 관심사/싫어요 사용자 요청 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 관심사/싫어요 항목 고유 키
        required: true
        content:
          text/plain:
            schema:
              type: integer
              format: int64
              example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
    delete:
      security:
        - bearerAuth: []
      tags:
        - User Interest
      summary: 관심사/싫어요 사용자 요청 삭제
      description: 관심사/싫어요 사용자 요청 삭제
      parameters:
        - in: path
          name: id
          description: 관심사/싫어요 사용자 요청 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-photos:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Photo
      summary: 사용자 사진 목록 조회
      description: 사용자 사진 목록 조회 (삭제된 건 제외)
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: type
          description: 사진 타입
          required: false
          schema:
            type: string
            enum:
              - DEFAULT
              - THUMBNAIL
              - MAIN
            example: DEFAULT
        - in: query
          name: nickname
          description: 프로필 닉네임 (LIKE 검색)
          required: false
          schema:
            type: string
            example: Madam
        - in: query
          name: validated
          description: 승인 여부
          required: false
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfilePhoto'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-photos/:uid:
    put:
      security:
        - bearerAuth: []
      tags:
        - User Photo
      summary: 사용자 사진 승인/기각 처리
      description: |
        # 사용자 사진 승인/기각 처리
          - 승인 시, validated = true
          - 기각 시, deleted = true
      parameters:
        - in: path
          name: uid
          description: 프로필 고유 키
          required: true
          schema:
            type: string
            example: UID
      requestBody:
        description: 사진 승인/기각 처리 데이터
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - validated
                - deleted
                - adminEmail
              properties:
                validated:
                  type: boolean
                  description: 승인 여부
                  example: true
                deleted:
                  type: boolean
                  description: 기각(삭제) 여부
                  example: false
                adminEmail:
                  type: string
                  format: email
                  description: 처리 관리자 이메일
                  example: madam@example.com
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-profiles:
    get:
      security:
        - bearerAuth: []
      tags:
        - User Profile
      summary: 사용자 프로필 목록 조회
      description: |
        - 프로필 추가 선택항목 중, 타입이 TEXT / TEXT_AREA인 항목들을 프로필 별 항목별로 목록으로 조회
        - 항목의 값이 NULL 또는 공백인 데이터 제외
      parameters:
        - in: query
          name: pageSize
          description: 조회 항목 개수
          required: true
          schema:
            type: integer
            format: int32
            example: 10
        - in: query
          name: pageNumber
          description: 조회 페이지 번호
          required: true
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: nickname
          description: 프로필 닉네임
          required: false
          schema:
            type: string
            example: Madam
        - in: query
          name: profileExtraItemId
          description: 유저 프로필 추가 선택항목 고유 키(타입이 TEXT / TEXT_AREA인 항목만)
          required: false
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: profileExtraItemValue
          description: 프로필 추가 선택항목의 사용자 입력 값(LIKE 검색)
          required: false
          schema:
            type: string
            example: |
              나는 천재입니다.
        - in: query
          name: userStatus
          description: 사용자 계정 상태
          required: false
          schema:
            type: string
            enum:
              - REST
              - ACTIVE
              - BAN
              - QUIT
              - INACTIVE
            example: ACTIVE
        - in: query
          name: modifiedAtFrom
          description: 최종 수정일시 범위 시작 시간
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-08-09T21:59:00.000Z'
        - in: query
          name: modifiedAtTo
          description: 최종 수정일시 범위 종료 시간
          required: false
          schema:
            type: string
            format: date-time
            example: '2021-08-09T21:59:00.000Z'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
  /user-profiles/:uid/:profileExtraItemId:
    put:
      security:
        - bearerAuth: []
      tags:
        - User Profile
      summary: 유저 프로필 선택항목 입력 값 삭제 처리
      description: 유저 프로필 선택항목 중, 타입이 TEXT / TEXT_AREA 인 항목에 입력한 값을 공백으로 치환 처리
      parameters:
        - in: path
          name: uid
          description: 프로필 고유 키
          required: true
          schema:
            type: string
            example: UID
        - in: path
          name: profileExtraItemId
          description: 유저 프로필 선택항목 고유 키
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        description: 삭제 처리 관리자 이메일
        required: true
        content:
          text/plain:
            schema:
              type: string
              description: 삭제 처리 관리자 이메일
              example: madam@example.com
      responses:
        200:
          description: Success
        204:
          description: No Content
        400:
          description: Invalid Request Param
        403:
          description: No Authority
        500:
          description: Server Error
